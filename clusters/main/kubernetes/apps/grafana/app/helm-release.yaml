---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: grafana
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 17.9.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    TZ: Europe/Amsterdam

    credentials:
      s3:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}-grafana"
        accessKey: "${S3ID}"
        secretKey: "${S3KEY}"
        encrKey: "${S3KEY}"

    ingress:
      main:
        enabled: true
        hosts:
          - host: grafana.${DOMAIN_0}
        tls:
          - hosts:
              - grafana.${DOMAIN_0}
        integrations:
          traefik:
            enabled: true
            entrypoints:
              - websecure
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
    cnpg:
      main:
        #mode: recovery
        backups:
          credentials: s3
          enabled: true
        recovery:
          method: object_store
          credentials: s3
        cluster:
          instances: 1
          singleNode: true
        enabled: true
        hibernate: false
        monitoring:
          disableDefaultQueries: false
          enablePodMonitor: true
        pgVersion: 16
        pooler:
          enabled: false

    persistence:
      config:
        enabled: true
        mountPath: /etc/grafana/grafana.ini
        objectName: config
        subPath: grafana.ini
        type: configmap
      data:
        enabled: true
        mountPath: /var/lib/grafana
        readOnly: false
        storageClass: ""
        volsync:
          - credentials: s3
            dest:
              enabled: true
            name: data
            src:
              enabled: true
            type: restic

    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                #GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${DOMAIN_0}/application/o/userinfo/
                #GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${DOMAIN_0}/application/o/authorize/
                #GF_AUTH_GENERIC_OAUTH_CLIENT_ID: ${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}
                #GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET}
                #GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
                #GF_AUTH_GENERIC_OAUTH_NAME: authentik
                #GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
                #GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email
                #GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${DOMAIN_0}/application/o/token/
                GF_AUTH_LDAP_ALLOW_SIGN_UP: false
                #GF_AUTH_LDAP_CONFIG_FILE: /opt/bitnami/grafana/conf/ldap.toml
                GF_AUTH_LDAP_ENABLED: false
                #GF_AUTH_OAUTH_ALLOW_INSECURE_EMAIL_LOOKUP: "true"
                #GF_AUTH_OAUTH_AUTO_LOGIN: "true"
                #GF_AUTH_SIGNOUT_REDIRECT_URL: https://auth.${DOMAIN_0}/application/o/grafana/end-session/
                GF_INSTALL_PLUGINS: "grafana-clock-panel"
                GF_PANELS_DISABLE_SANITIZE_HTML: "true"
                GF_SECURITY_ADMIN_PASSWORD: ${MONITORING_GRAFANA_ADMIN_PASSWORD}
                GF_SECURITY_ADMIN_USER: admin
                GF_SERVER_HTTP_PORT: 3000
                GF_SERVER_ROOT_URL: https://grafana.${DOMAIN_0}
                GF_RENDERING_SERVER_URL: http://grafana-image-renderer:8081/render
                GF_RENDERING_CALLBACK_URL: http://grafana:3000/